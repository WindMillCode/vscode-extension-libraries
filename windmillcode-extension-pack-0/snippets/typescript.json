{

	"class":{
		"prefix": "class",
		"body": "class $1 {\n\tconstructor(params:Partial<$1>={}){\n\t\tObject.assign(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\t...params\n\t\t\t}\n\t\t)\n\t}\n}"
	},
	"describe":{
		"prefix": "describe",
		"body": "describe(\"$1\",()=>{\n\n})"
	},
	"it":{
		"prefix": "it",
		"body": "it(` when called | \n under normal conditions | \n does the required action `,()=>{\n$1\n})"
	},
	"takeUntil":{
		"prefix": "takeUntil",
		"body":"takeUntil(this.ngUnsub),"
	},
	"ngOnDestroy":{
		"prefix": "ngOnDestroy",
		"body": "ngOnDestroy(){\n\tthis.ngUnsub.next();\n\tthis.ngUnsub.complete()\n}"
	},
	"subscribe":{
		"prefix": "pipe(",
		"body": ".pipe(\n\ttakeUntil(this.ngUnsub),\n\ttap(()=>{\n\n\t})\n)\n"
	},
	"beforeEach":{
		"prefix": "beforeEach",
		"body": "beforeEach(()=>{\n\n})"
	},
	"generateArray":{
		"prefix": "Array(",
		"body": "Array($1)\n.fill(null)\n.map((nullVal,index0)=>{\n\n})"
	},
	"forEach":{
		"prefix": "forEach",
		"body": ".forEach(($1)=>{$2\n\n})"
	},
	"map":{
		"prefix": "map",
		"body": ".map(($1)=>{$2\n\n})"
	},
	"filter":{
		"prefix": "filter",
		"body": ".filter(($1)=>{$2\n\n})"
	},
	"reduce":{
		"prefix": "reduce",
		"body": ".reduce((acc,$1)=>{$2\n\n})"
	},
	"modern endpoint":{
		"prefix":"iif",
		"body":[
			"return iif(\n\t()=>$1,\n\tof(null),$2\n)"
		]
	},

	"js comment":{
		"prefix": "js comment ",
		"body": "/**\n * @$0 $1\n*/"
	},
	"angular: Env form control name":{
		"prefix": "FormControlName ",
		"body": "$1FormControlName:\"$1\""
	},
	"import translation file":{
		"prefix":"import enTranslations",
		"body":"import enTranslations from \"src/assets/i18n/en.json\";"
	},
	"wml color":{
		"prefix":"orig",
		"body":"wml$1:rootStyle().getPropertyValue('--wml-$2'),\nwmlOrig$1:rootStyle().getPropertyValue('--wml-orig-$2'),"
	}
}
