{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "misc: run various tasks",
      "type": "shell",
      "command": ".\\ignore\\Windmillcode\\${input:run_various_tasks0}",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "runOptions": {
        "instanceLimit": 10
      }
    },
    {
      "label": "git: Git management",
      "type": "shell",
      "command": "git status",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "git: pushing work to git remote",
      "type": "shell",
      "command": "git add .;git commit -m'[${input:pushing_work_to_git_remote0}] ${input:pushing_work_to_git_remote1}';git branch --unset-upstream;git push origin HEAD",
      "group": "none",
      "linux": {
        "command": "git add .;git commit -m\"[${input:pushing_work_to_git_remote0}] ${input:pushing_work_to_git_remote1}\";git branch --unset-upstream;git push origin HEAD"
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "git: Create branch after merged changes",
      "type": "shell",
      "command": " git checkout ${input:create_branch_after_merged_changes0};git pull origin ${input:create_branch_after_merged_changes0};git branch --delete ${input:create_branch_after_merged_changes1};git checkout -b ${input:create_branch_after_merged_changes2}",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "close": true
      }
    },
    {
      "label": "git: Removing a file from being tracked by git",
      "type": "shell",
      "command": "git rm --cached  --sparse ${input:Removing_a_file_from_being_tracked_by_git0}",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "close": true
      }
    },
    {
      "label": "git: merge changes from current dev branch",
      "type": "shell",
      "command": " git checkout ${input:merge_changes_from_current_dev_branch0};git pull origin ${input:merge_changes_from_current_dev_branch0};git checkout -;git merge ${input:merge_changes_from_current_dev_branch0}",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "git: Merge Changes From Master",
      "type": "shell",
      "command": " git checkout master;git pull origin master;git branch --delete windmillcode-winner;git checkout -b windmillcode-winner",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "angular frontend: run",
      "type": "shell",
      "windows": {
        "command": ".\\ignore\\${input:current_user_0}\\angular_frontend_run.ps1"
      },
      "osx": {
        "command": "cd ignore/${input:current_user_0}; ./run-frontend-dev.sh"
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "problemMatcher": []
    },
    {
      "label": "angular frontend: run with cache",
      "type": "shell",
      "windows": {
        "command": "cd .\\apps\\zero\\frontend\\AngularApp\\; npx ng serve --ssl=true --ssl-key=$env:WML_CERT_KEY0 --ssl-cert=$env:WML_CERT0"
      },
      "osx": {
        "command": "cd ignore/${input:current_user_0}; ./run-frontend-dev.sh"
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "angular frontend: run translation script",
      "type": "shell",
      "windows": {
        "command": ".\\ignore\\Windmillcode\\run_angular_translate.ps1"
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "angular frontend: Generate_Angular_Component",
      "type": "shell",
      "command": "cd .\\apps\\zero\\frontend\\AngularApp\\;npx ng g @windmillcode/angular-templates:component --name ${input:Generate_Angular_Component0}  --standalone ${input:Generate_Angular_Component1}  --cpnt-type ${input:Generate_Angular_Component2} --style-type ${input:Generate_Angular_Component3};",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "angular frontend: generate page module",
      "type": "shell",
      "command": ".\\ignore\\Windmillcode\\angular_frontend_generate_page_module.ps1 ${input:generate_page_module0} ${input:generate_page_module1} ${input:generate_page_module2} ${input:generate_page_module3} ${input:generate_page_module4} ${input:generate_page_module5} ${input:generate_page_module6} ${input:generate_page_module7}",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "angular frontend: test",
      "type": "shell",
      "command": "cd .\\apps\\zero\\frontend\\AngularApp\\; npx ng test --watch --code-coverage",
      "windows": {
        "command": "cd .\\apps\\zero\\frontend\\AngularApp\\; npx ng test --watch --code-coverage"
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "angular frontend: install app deps",
      "type": "shell",
      "command": "cd .\\apps\\zero\\frontend\\AngularApp\\; yarn install",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "promptOnClose": false
    },
    {
      "label": "angular frontend: Check for angular updates",
      "type": "shell",
      "command": "cd .\\apps\\zero\\frontend\\AngularApp\\; npx ng update",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "promptOnClose": false,
      "runOptions": {
        "runOn": "folderOpen"
      }
    },
    {
      "label": "angular frontend: update angular",
      "type": "shell",
      "command": "git add .;git commit -m'[CHECKPOINT] before upgrading to next angular version';  .\\ignore\\${input:current_user_0}\\update_angular.ps1 ",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "close": true
      },
      "promptOnClose": false
    },
    {
      "label": "angular frontend: install external angular project",
      "type": "shell",
      "command": "cd .\\apps\\zero\\frontend\\AngularApp\\; yarn remove ${input:external_angular_project0};yarn link ${input:external_angular_project0}",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "promptOnClose": false
    },
    {
      "label": "angular frontend: uninstall external angular project",
      "type": "shell",
      "command": "cd .\\apps\\zero\\frontend\\AngularApp\\; yarn unlink ${input:external_angular_project0}; yarn add ${input:npm_package_install_type0} ${input:external_angular_project0}",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "promptOnClose": false
    },
    {
      "label": "angular frontend: run compodoc",
      "type": "shell",
      "command": "cd .\\apps\\zero\\frontend\\AngularApp\\; yarn compodoc:build-and-serve",
      "osx": {
        "command": "cd ignore/${input:current_user_0}; ./run-frontend-dev.sh"
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "angular frontend: analyze",
      "type": "shell",
      "command": "cd .\\apps\\zero\\frontend\\AngularApp\\; yarn analyze:${input:angular_frontend_analyze0}",
      "osx": {
        "command": "cd ignore/${input:current_user_0}; ./run-frontend-dev.sh"
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "firebase cloud: install app deps",
      "type": "shell",
      "windows":{
        "command": " cd apps\\zero\\cloud\\firebase; yarn install",
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "firebase cloud:run emulators",
      "type": "shell",
      "windows":{
        "command": "cd .\\apps\\zero\\cloud\\firebase\\;npm run cleanup;npx firebase emulators:start --import='devData' --export-on-exit",
      },
      "osx": {
        "command": "cd ./apps/zero/cloud/firebase/;npm run cleanup;npx firebase emulators:start --import='devData' --export-on-exit"
      },
      "group": "none",
      "linux": {
        "command": "cd ./apps/zero/cloud/firebase/;npx firebase emulators:start --import='devData' --export-on-exit"
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "runOptions": {
        "runOn": "folderOpen"
      }
    },
    {
      "label": "npm: reinstall npm package",
      "type": "shell",
      "windows":{
        "command": ".\\ignore\\${input:current_user_0}\\reinstall_npm_package.ps1 ${input:nodejs_app_location0} ${input:npm_package_install_type1} ${input:npm_package_name_to_install0}",
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "runOptions": {
        "instanceLimit": 10
      }
    },
    {
      "label": "database-mysql: run via docker",
      "type": "shell",
      "command": "docker start windmillcodesite-mysql-local-0",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared",
        "close": true
      },
      "runOptions": {
        "runOn": "folderOpen"
      }
    },
    {
      "label": "database-mysql: init mysql con tainer",
      "type": "shell",
      "command": ".\\ignore\\Windmillcode\\init_mysql_container.ps1 ${input:mySQLDatabaseport}",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "database-mysql: ssh into docker mysql SQL container",
      "type": "shell",
      "command": "docker exec -it windmillcodesite-mysql-local-0 /bin/bash",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared",
        "close": true
      }
    },
    {
      "label": "database-mysql: create sql record",
      "type": "shell",
      "windows": {
        "command": ".\\ignore\\Windmillcode\\new_database_script.ps1"
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "flask backend: run",
      "type": "shell",
      "windows": {
        "command": ".\\ignore\\${input:current_user_0}\\run_backend_dev.ps1 ${input:current_user_0}"
      },
      "osx": {
        "command": "./ignore/${input:current_user_0}/run-backend-dev.sh ${input:current_user_0}"
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "runOptions": {
        "runOn": "folderOpen"
      }
    },
    {
      "label": "flask backend: test",
      "type": "shell",
      "command": ".\\ignore\\${input:current_user_0}\\run_backend_test.ps1 ${input:current_user_0}",
      "windows": {
        "command": ".\\ignore\\${input:current_user_0}\\run_backend_test.ps1 ${input:current_user_0}"
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "flask backend: install app deps",
      "type": "shell",
      "windows":{
        "command": " cd apps\\zero\\backend\\FlaskApp; pip install -r ${input:backend_flask_install_app_deps_0}-requirements.txt --upgrade --target .\\site-packages\\${input:backend_flask_install_app_deps_0}",
      },
      "osx": {
        "command": "./ignore/${input:current_user_0}/install-backend-flask.sh ${input:backend_flask_install_app_deps_0}"
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "flask backend: setup ec2 container",
      "type": "shell",
      "command": ".\\ignore\\Windmillcode\\build_script_for_flask_ec2.ps1"
    },
    {
      "label": "flask backend: docker setup for back4app",
      "type": "shell",
      "command": ".\\ignore\\Windmillcode\\docker_build_script_for_flask_backend_back4app.ps1"
    },
    {
      "label": "flask backend: setup for gae",
      "type": "shell",
      "command": ".\\ignore\\Windmillcode\\docker_build_script_for_flask_backend_gae.ps1"
    },
    {
      "label": "flask backend: docker setup for render",
      "type": "shell",
      "command": ".\\ignore\\Windmillcode\\docker_build_script_for_flask_backend_render.ps1"
    },
    {
      "label": "testng e2e: run",
      "type": "shell",
      "command": ".\\ignore\\${input:current_user_0}\\run_e2e_test.ps1",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "testng e2e: setup vscode java testing extension",
      "type": "shell",
      "command": ".\\ignore\\${input:current_user_0}\\setup_vscode_extension_testng.ps1",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "testng e2e: create testNG page",
      "type": "shell",
      "windows":{
        "command": ".\\ignore\\${input:current_user_0}\\testng_create_page.ps1 ${input:create_testNG_page};",
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    }
  ],
  "inputs": [
    {
      "id":"create_testNG_page",
      "description": "create a page based on the pattern",
      "type": "promptString"
    },
    {
      "id": "current_user_0",
      "description": "the user to run their env scripts",
      "default": "Windmillcode",
      "type": "pickString",
      "options": [
        "Windmillcode",
        "NF"
      ]
    },
    {
      "id" : "nodejs_app_location0",
      "description": "location of the nodejs app",
      "default": ".\\apps\\zero\\frontend\\AngularApp\\",
      "type": "pickString",
      "options": [
        ".\\apps\\zero\\frontend\\AngularApp\\",
        ".\\apps\\zero\\cloud\\firebase\\"
      ]
    },
    {
      "id": "run_various_tasks0",
      "description": "script to run",
      "default": "deploy_script_for_angular_firebase.ps1",
      "type": "pickString",
      "options": [
        "deploy_script_for_angular_firebase_preview.ps1",
        "deploy_script_for_angular_firebase_prod.ps1",
      ]
    },
    {
      "id": "generate_page_module0",
      "description": "name of module",
      "type": "promptString",
    },
    {
      "id": "create_branch_after_merged_changes0",
      "description": "the branch to pull from",
      "default": "dev",
      "type": "promptString"
    },
    {
      "id": "create_branch_after_merged_changes1",
      "description": "the local branch to delete",
      "default": "windmillcode-winner",
      "type": "promptString"
    },
    {
      "id": "create_branch_after_merged_changes2",
      "description": "the local branch to make",
      "default": "windmillcode-winner",
      "type": "promptString"
    },
    {
      "id": "merge_changes_from_current_dev_branch0",
      "description": "the branch to pull from",
      "default": "dev",
      "type": "promptString"
    },
    {
      "id": "Removing_a_file_from_being_tracked_by_git0",
      "description": "",
      "type": "promptString"
    },
    {
      "id": "pushing_work_to_git_remote0",
      "description": "pushing_work_to_git_remote",
      "default": "UPDATE",
      "type": "pickString",
      "options": ["UPDATE", "FIX", "PATCH", "BUG", "MERGE", "COMPLEX MERGE"]
    },
    {
      "id": "pushing_work_to_git_remote1",
      "description": "git commit desc",
      "default": "additional work",
      "type": "promptString"
    },
    {
      "id": "backend_flask_install_app_deps_0",
      "description": "whether to install on windows mac os or linux (choose linux for macos)",
      "default": "Windmillcode",
      "type": "pickString",
      "options": [
        "windows",
        "linux",
        "darwin"
      ]
    },
    {
      "id": "external_angular_project0",
      "description": "provide the package name",
      "default": "wml-slicebox",
      "options": [

        "@windmillcode/penrose",
        "@windmillcode/wml-input",
        "@windmillcode/wml-field",
        "@windmillcode/wml-form",
        "@windmillcode/wml-slicebox",
        "@windmillcode/angular-templates",
        "@windmillcode/wml-components-base",
        "@windmillcode/wml-notify",
        "@windmillcode/wml-chips",
        "@windmillcode/wml-file-manager",
        "@windmillcode/wml-notify",
        "@windmillcode/wml-options",
        "@windmillcode/wml-popup",
        "@windmillcode/wml-slicebox",
        "@windmillcode/wml-tabs",
        "@windmillcode/social-media-card"
      ],
      "type": "pickString"
    },
    {
      "id": "Generate_Angular_Component0",
      "description": "the name of the component",
      "type": "promptString",
    },
    {
      "id": "Generate_Angular_Component1",
      "description": "component is standalone?",
      "default": "false",
      "type": "pickString",
      "options": ["true", "false"]
    },
    {
      "id": "Generate_Angular_Component2",
      "description": "type of component",
      "default": "default",
      "type": "pickString",
      "options": ["default", "library"]
    },
    {
      "id": "Generate_Angular_Component3",
      "description": "preset scss to choose from.",
      "default": "type0",
      "type": "pickString",
      "options": ["type0","type1", "none"]
    },
    {
      "id": "npm_package_name_to_install0",
      "description": "provide an npm package to reninstall",
      "default": "@windmillcode/angular-templates",
      "type": "promptString"
    },
    {
      "id": "npm_package_install_type0",
      "description": "dev install or dev dependency install",
      "default": "-D",
      "type": "pickString",
      "options": ["-s", "-D"]
    },
    {
      "id": "npm_package_install_type1",
      "description": "dev install or dev dependency install for scripts",
      "default": "-D",
      "type": "pickString",
      "options": ["'-s'", "'-D'"]
    },
    {
      "id": "update_a_npm_package2",
      "description": "dev install or dev dependency install",
      "default": "-D",
      "type": "pickString",
      "options": ["--dev", ""]
    },
    {
      "id":"angular_frontend_analyze0",
      "description": "dev install or dev dependency install",
      "default": "prod",
      "type": "pickString",
      "options": ["dev", "preview","prod"]
    },
    {
      "id": "push_python_docker_backend_prod_img0",
      "description": "provide img tag(version) for your docker img to be pushed",
      "type": "promptString"
    },
    {
      "id": "Build_python_docker_backend_prod_img0",
      "description": "provide img tag(version) for your docker img",
      "type": "promptString"
    },
    {
      "id": "mySQLDatabaseport",
      "description": "the port for the postgres database",
      "default": "3306",
      "type": "pickString",
      "options": ["3306"]
    },
    {
      "id":"make_a_new_bug_report_0",
      "description": "the name of the bug report (USE DASHES OR UNDELINE FOR SPACES)",
      "type": "promptString"
    }
  ]
}
