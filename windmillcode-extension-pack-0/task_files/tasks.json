{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "angular frontend: analyze",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "angular frontend: check for angular updates",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1,
        "runOn":"folderOpen"
      }
    },
    {
      "label": "angular frontend: run",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1,
        "runOn":"folderOpen"
      }
    },
    {
      "label": "angular frontend: run compodoc",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "angular frontend: run translate",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "angular frontend: test",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "angular frontend: update angular",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "docker: init container",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 10
      }
    },
    {
      "label": "docker: backup all images",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "docker: restore all images",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "docker: run",
      "type": "shell",


      "runOptions": {
        "runOn": "folderOpen",
        "instanceLimit": 10
      }
    },
    {
      "label": "docker: ssh into container",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 10
      }
    },
    {
      "label": "flask backend: run",
      "type": "shell",


      "runOptions": {
        "runOn":"folderOpen",
        "instanceLimit": 1
      }
    },
    {
      "label": "flask backend: test",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "flask backend: create controller",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "flutter mobile: create page",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "flutter mobile: install specific packages",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "flutter mobile: create layout",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "flutter mobile: create shared widget",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "flutter mobile: create riverpod async notifier provider",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "flutter mobile: create riverpod provider",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "flutter mobile: build",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "flutter mobile: test",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "firebase cloud: run emulators",
      "type": "shell",


      "runOptions": {
        "runOn":"folderOpen",
        "instanceLimit": 1
      }
    },
    {
      "label": "git: create branch after merged changes",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "git: clone subdirs",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "git: merge changes from current dev branch",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "git: pushing work to git remote",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "git: removing a file from being tracked by git",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "misc: optimize images",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "misc: make a new doc item",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "misc: open doc item in vscode",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "misc: copy to keep projects in sync",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "python: install app deps",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 10
      }
    },
    {
      "label": "python: install specific packages",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 10
      }
    },
    {
      "label": "sql: get schema via docker",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "sql: make db schema update entry",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "testng: e2e create testng page",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "testng: e2e run",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "testng: e2e setup vscode extension",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 1
      }
    },
    {
      "label": "npm: install app deps",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 10
      }
    },
    {
      "label": "npm: install specific packages",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 10
      }
    },
    {
      "label": "npm: silence typescript errors",
      "type": "shell",


      "runOptions": {
        "instanceLimit": 10
      }
    }
  ],
  "inputs": [
    {
      "id": "current_user_0",
      "description": "the user to run their env scripts",
      "default": "Windmillcode",
      "type": "promptString"
    }
  ]
}
